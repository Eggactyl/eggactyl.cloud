---
import StarlightSidebar from "@astrojs/starlight/components/Sidebar.astro";
import type { Props } from "@astrojs/starlight/props";

import { getRecentBlogEntries } from "../libs/content";
import {
  isAnyBlogPage,
  isBlogPostPage,
  isBlogRoot,
  isBlogTagsPage,
} from "../libs/page";
import { getAllTags } from "../libs/tags";

const isBlog = isAnyBlogPage(Astro.props.slug);
const recentEntries = isBlog ? await getRecentBlogEntries() : [];

const blogSidebar: Props["sidebar"] = isBlog
  ? [
      {
        attrs: {},
        badge: undefined,
        href: "/releases",
        isCurrent: isBlogRoot(Astro.props.slug),
        label: "All posts",
        type: "link",
      },
      {
        collapsed: false,
        entries: recentEntries.map((blogEntry, index) => ({
          attrs: {},
          badge:
            blogEntry.data.sidebar.badge ||
            (index == 0 ? { text: "Latest", variant: "note" } : undefined),
          href: `/${blogEntry.slug}`,
          isCurrent: isBlogPostPage(Astro.props.slug, blogEntry.slug),
          label: blogEntry.data.title,
          type: "link",
        })),
        label: "Recent posts",
        type: "group",
      },
    ]
  : [];

if (isBlog) {
  const blogTags = await getAllTags();

  if (blogTags.size > 0) {
    blogSidebar.push({
      collapsed: false,
      entries: [...blogTags]
        .sort(([, a], [, b]) => {
          if (a.entries.length === b.entries.length) {
            return a.label.localeCompare(b.label);
          }

          return b.entries.length - a.entries.length;
        })
        .map(([slug, { entries, label }]) => ({
          attrs: {},
          badge: undefined,
          href: `/releases/tags/${slug}`,
          isCurrent: isBlogTagsPage(Astro.props.slug, slug),
          label: `${label} (${entries.length})`,
          type: "link",
        })),
      label: "Tags",
      type: "group",
    });
  }
}
---

{
  !isBlog && (
    <div class="md:sl-hidden">
      <a href="/releases">Blog</a>
    </div>
  )
}
<StarlightSidebar
  {...Astro.props}
  sidebar={isBlog ? blogSidebar : Astro.props.sidebar}
/>

<style>
  div {
    border-bottom: 1px solid var(--sl-color-gray-6);
    padding-bottom: 1rem;
  }

  div a {
    color: var(--sl-color-white);
    font-size: var(--sl-text-lg);
    font-weight: 600;
    text-decoration: none;
  }
</style>
